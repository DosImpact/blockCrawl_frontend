{"version":3,"sources":["styles/Globalstyles.js","components/Header.js","hooks/useInput.js","components/Section.js","components/Loader.js","components/Crwal/NurlTag.js","routes/Home.js","components/Router.js","styles/theme.js","App.js","Apollo/LocalState.js","Apollo/Client.js","index.js"],"names":["globalStyles","createGlobalStyle","reset","withRouter","pathname","location","console","log","List","className","ListItem","current","SLink","to","Header","styled","header","props","theme","lightGrayColor","darkColor","grayColor","lightPupleColor","ul","li","pupleColor","Link","initValue","useState","value","setValue","onChange","e","target","SectionContainer","div","name","children","N_URL_TAG","gql","TextArea","textarea","ItemList","num","item","useLazyQuery","getNurlTag","loading","data","urlsInput","useInput","tagInput","submitBtn","a","urls","tag","String","trim","split","variables","Section","type","Loader","onClick","NurlTag","JSON","parse","map","idx","key","HomeContainer","Home","src","height","width","path","component","from","bgColor","lightDarkColor","listSize","App","Router","resolvers","Mutation","logUserIn","_","token","cache","writeData","isLoggedIn","logUserOut","__","ApolloClient","uri","clientState","defaults","headers","Authorization","localStorage","getItem","ReactDOM","render","StrictMode","client","Client","document","getElementById"],"mappings":"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","file":"static/js/main.fb392b7a.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:whitesmoke;\r\n        color: #42505C;\r\n        padding-top:50px;\r\n        margin:20px;\r\n        margin-left:200px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    {console.log(pathname)}\r\n    <List className=\"Header__List\">\r\n      <ListItem>\r\n        <div className=\"listItem__Header\">\r\n          <span>🎨</span>\r\n          <span>Block Crwal</span>\r\n          <span>🎈</span>\r\n        </div>\r\n      </ListItem>\r\n      <ListItem>\r\n        <div className=\"listItem__New\">\r\n          <div className=\"listItem__NewContainer\">\r\n            <div>+ NEW</div>\r\n          </div>\r\n        </div>\r\n      </ListItem>\r\n      <ListItem current={pathname === \"/\" ? true : false}>\r\n        <SLink to={{ pathname: \"/\" }}>📄 DashBoard</SLink>\r\n      </ListItem>\r\n      <ListItem current={pathname === \"/info\" ? true : false}>\r\n        <SLink to={{ pathname: \"/info\" }}>🌊 Quick Filters</SLink>\r\n      </ListItem>\r\n      <ListItem current={pathname === \"/profile\" ? true : false}>\r\n        <SLink to={{ pathname: \"/profile\" }}>⌛️ Recent Tasks</SLink>\r\n      </ListItem>\r\n      <ListItem current={pathname === \"/Team\" ? true : false}>\r\n        <SLink to={{ pathname: \"/Team\" }}>🏰 Team Collaborations</SLink>\r\n      </ListItem>\r\n      <ListItem current={pathname === \"/DataService\" ? true : false}>\r\n        <SLink to={{ pathname: \"/DataService\" }}>📊 Data Service</SLink>\r\n      </ListItem>\r\n      <ListItem current={pathname === \"/Contact\" ? true : false}>\r\n        <SLink to={{ pathname: \"/Contact\" }}>📱 Contact Us</SLink>\r\n      </ListItem>\r\n    </List>\r\n  </Header>\r\n));\r\n\r\nconst Header = styled.header`\r\n  height: 100%;\r\n  width: 200px;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: ${(props) => props.theme.lightGrayColor};\r\n  color: ${(props) => props.theme.darkColor};\r\n  font-weight: 600;\r\n  font-size: 14px;\r\n\r\n  .listItem__Header {\r\n    height: 60px;\r\n    width: 100%;\r\n    background-color: ${(props) => props.theme.grayColor};\r\n    display: flex;\r\n    padding: 5px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-size: 20px;\r\n  }\r\n  .listItem__New {\r\n    display: flex;\r\n    padding: 5px;\r\n    width: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    .listItem__NewContainer {\r\n      background-color: ${(props) => props.theme.lightPupleColor};\r\n      width: 80%;\r\n      height: 40px;\r\n      border-radius: 50px;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n  }\r\n`;\r\n\r\nconst List = styled.ul`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  height: 60px;\r\n  width: 100%;\r\n  /* border: 3px solid\r\n    ${(props) => (props.current ? props.theme.pupleColor : \"transparent\")}; */\r\n  background-color: ${(props) =>\r\n    props.current ? props.theme.lightPupleColor : \"\"};\r\n  color: ${(props) => (props.current ? props.theme.lightGrayColor : \"\")};\r\n  transition: all 0.5s ease-in-out;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import React, { useState } from \"react\";\r\n\r\nexport default (initValue) => {\r\n  const [value, setValue] = useState(initValue);\r\n  const onChange = (e) => {\r\n    if (e) {\r\n      setValue(e.target.value);\r\n    }\r\n  };\r\n  return { onChange, value };\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SectionContainer = styled.div`\r\n  width: 700px;\r\n  height: 1000px;\r\n  background-color: ${(props) => props.theme.grayColor};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border: 3px solid ${(props) => props.theme.pupleColor};\r\n  font-size: 15px;\r\n  .Section__Name {\r\n    font-size: 30px;\r\n    margin: 30px;\r\n  }\r\n`;\r\n\r\nexport default ({ name, children }) => {\r\n  return (\r\n    <SectionContainer>\r\n      <h1 className=\"Section__Name\">{name}</h1>\r\n      {children}\r\n    </SectionContainer>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => <>loading...</>;\r\n","import React, { useState } from \"react\";\r\nimport useInput from \"../../hooks/useInput\";\r\nimport Section from \"../../components/Section\";\r\nimport styled from \"styled-components\";\r\n/**\r\n * 사용자가 url를 TextArea에 붙여넣고 , 개행별로 구분을 해서 파싱을 해보자.\r\n */\r\n\r\nimport gql from \"graphql-tag\";\r\nimport { useLazyQuery } from \"@apollo/react-hooks\";\r\nimport Loader from \"../Loader\";\r\n\r\nconst N_URL_TAG = gql`\r\n  query NurlTagQuery($tag: String!, $urls: [String!]!) {\r\n    NurlTag(tag: $tag, urls: $urls)\r\n  }\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  height: 50%;\r\n  width: 80%;\r\n`;\r\n\r\nconst ItemList = ({ num, item }) => {\r\n  return (\r\n    <div>\r\n      {num} . : {item}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  const [getNurlTag, { loading, data }] = useLazyQuery(N_URL_TAG);\r\n  const urlsInput = useInput();\r\n  const tagInput = useInput();\r\n  const submitBtn = async () => {\r\n    console.log(\"submit\");\r\n    let urls = null;\r\n    let tag = null;\r\n    if (urlsInput.value) {\r\n      urls = String(urlsInput.value).trim().split(\"\\n\");\r\n      console.log(urls);\r\n    }\r\n    if (tagInput.value) {\r\n      tag = String(tagInput.value);\r\n    }\r\n    console.log(urls);\r\n    console.log(tag);\r\n    getNurlTag({ variables: { tag, urls } });\r\n  };\r\n  return (\r\n    <>\r\n      <Section name=\"NurlTag Components\">\r\n        <h2>URLS</h2>\r\n        <TextArea {...urlsInput}></TextArea>\r\n        <h2>TAGS</h2>\r\n        <input type=\"text\" {...tagInput}></input>\r\n        {loading && <Loader />}\r\n        <button onClick={submitBtn}>OK</button>\r\n        {data &&\r\n          data.NurlTag &&\r\n          JSON.parse(data.NurlTag).map((e, idx) => (\r\n            <ItemList key={idx} num={idx} item={e} />\r\n          ))}\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NurlTag } from \"../components/Crwal\";\r\n\r\nconst HomeContainer = styled.div`\r\n  margin: 20px;\r\n`;\r\n\r\nconst Home = () => {\r\n  return (\r\n    <HomeContainer>\r\n      <NurlTag />\r\n      <iframe src=\"http://localhost:4000/\" height=\"1000px\" width=\"80%\"></iframe>\r\n    </HomeContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Switch, Route, BrowserRouter, Redirect } from \"react-router-dom\";\r\nimport Header from \"../components/Header\";\r\nimport Home from \"../routes/Home\";\r\n\r\nexport default () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/\" component={Home}></Route>\r\n          <Redirect from=\"*\" to=\"/\"></Redirect>\r\n        </Switch>\r\n      </>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","export default {\r\n  bgColor: \"#FFFFFF\",\r\n\r\n  pupleColor: \"#613CEA\",\r\n  lightPupleColor: \"#B093C7\",\r\n\r\n  grayColor: \"#D5D8E5\",\r\n  lightGrayColor: \"#E3E3EC\",\r\n\r\n  darkColor: \"#42505C\",\r\n  lightDarkColor: \"#B9BDC4\",\r\n\r\n  listSize: \"60px\",\r\n};\r\n","import React from \"react\";\nimport GlobalStyles from \"./styles/Globalstyles\";\nimport Router from \"./components/Router\";\n\nimport theme from \"./styles/theme\";\nimport { ThemeProvider } from \"styled-components\";\nfunction App() {\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <Router />\n        <GlobalStyles />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","export const defaults = {\r\n  isLoggedIn: false,\r\n};\r\nexport const resolvers = {\r\n  Mutation: {\r\n    logUserIn: (_, { token }, { cache }) => {\r\n      console.log(\"Try LocalState Management log user in \");\r\n      cache.writeData({\r\n        data: {\r\n          isLoggedIn: true,\r\n        },\r\n      });\r\n    },\r\n    logUserOut: (_, __, { cache }) => {\r\n      console.log(\"Try LocalState Management log user out \");\r\n      cache.writeData({\r\n        data: {\r\n          isLoggedIn: false,\r\n        },\r\n      });\r\n    },\r\n  },\r\n};\r\n","import ApolloClient from \"apollo-boost\";\r\nimport { defaults, resolvers } from \"./LocalState\";\r\n\r\nexport default new ApolloClient({\r\n  uri: \"http://localhost:4000\",\r\n  clientState: {\r\n    defaults,\r\n    resolvers,\r\n  },\r\n  headers: {\r\n    Authorization: `Bearer ${localStorage.getItem(\"LOGIN_TOKEN\")}`,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport Client from \"./Apollo/Client\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={Client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}